parameters:
  - name: api_inputs
    displayName: Inputs from API (json)
    type: string
  - name: config
    displayName: Inputs from user workflow (json)
    type: string


steps:
- bash: |
    i=0
    sensitive=$(echo '${{ parameters.api_inputs }}' | jq -cr '.sensitive' | jq -r '.[]')
    for s in $sensitive; do
      i=$((i+1))
      echo "##vso[task.setvariable variable=secret$i;issecret=true]${s}"
    done

    ##VARIABLES
    CI=true
    echo "##vso[task.setvariable variable=CI;]$CI"

    # config
    debug=$(echo '${{ parameters.config }}' | jq -cr '.debug // empty')
    [ "$debug" = "" ] && debug="false"
    echo "##vso[task.setvariable variable=DEBUG;]$debug"
  
    stk=$(echo '${{ parameters.config }}' | jq -cr '.stk // empty')
    [ "$stk" = "" ] && stk="stk-beta"
    echo "##vso[task.setvariable variable=stk;]$stk"

    # inputs
    email=$(echo '${{ parameters.api_inputs }}' | jq -cr '.cli_login_email // empty')
    echo "##vso[task.setvariable variable=email;]$email"
    echo "Parsed email: $email"

    realm=$(echo '${{ parameters.api_inputs }}' | jq -cr '.cli_login_realm // empty')
    echo "##vso[task.setvariable variable=realm;]$realm"
    echo "Parsed realm: $realm"

    # commands
    use_workspace_cmd=$(echo '${{ parameters.api_inputs }}' | jq -cr .use_workspace_cmd | base64 --decode)
    echo "##vso[task.setvariable variable=use_workspace_cmd;]$use_workspace_cmd"
    echo "Parsed use_workspace_cmd: $use_workspace_cmd"

    run_action_cmd=$(echo '${{ parameters.api_inputs }}' | jq -cr .run_action_cmd | base64 --decode)
    echo "##vso[task.setvariable variable=run_action_cmd;]$run_action_cmd"
    echo "Parsed run_action_cmd: $run_action_cmd"
  failOnStderr: true
  displayName: Validate inputs

- template: templates/install-stk-cli.yml

- template: templates/login-stk.yml

- bash: |
    echo "$(stk) $(use_workspace_cmd)"
    $(stk) $(use_workspace_cmd)
  displayName: Use workspace

- bash: |
    echo "$(stk) $(run_action_cmd)"
    $(stk) $(run_action_cmd)
  displayName: Run action

- bash: |
    cat ~/.$(stk)/logs/*
  displayName: Show Error Log
  condition: failed()