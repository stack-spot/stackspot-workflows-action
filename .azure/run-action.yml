parameters:
  - name: api_inputs
    displayName: Inputs from API (json)
    type: string
  - name: config
    displayName: Inputs from user workflow (json)
    type: string


steps:
- bash: |
    ##VARIABLES
    CI=true
    echo "##vso[task.setvariable variable=CI;]$CI"

    # config
    debug=$(echo '${{ parameters.config }}' | jq -cr '.debug // empty')
    [ "$debug" = "" ] && debug="false"
    echo "##vso[task.setvariable variable=DEBUG;]$debug"
  
    stk=$(echo '${{ parameters.config }}' | jq -cr '.stk // empty')
    [ "$stk" = "" ] && stk="stk-beta"
    echo "##vso[task.setvariable variable=stk;]$stk"

    # cli_login
    email=$(echo '${{ parameters.api_inputs }}' | jq -cr '.cli_login_email // empty')
    echo "##vso[task.setvariable variable=email;]$email"
    echo "Parsed email: $email"

    realm=$(echo '${{ parameters.api_inputs }}' | jq -cr '.cli_login_realm // empty')
    echo "##vso[task.setvariable variable=realm;]$realm"
    echo "Parsed realm: $realm"

    # action

    workspace_slug=$(echo '${{ parameters.api_inputs }}' | jq -cr '.workspace_slug // empty')
    echo "##vso[task.setvariable variable=workspace_slug;]$workspace_slug"
    echo "Parsed realm: $workspace_slug"
  failOnStderr: true
  displayName: Validate inputs

- template: templates/install-stk-cli.yml

- template: templates/login-stk.yml

- bash: |
    echo "$(stk) use workspace $(workspace_slug)"
    $(stk) use workspace "$(workspace_slug)"
  displayName: Use workspace

- bash: |
    #colors
    u_cyan='\033[4;36m'
    green='\033[0;32m'

    conn=$(echo '${{ parameters.api_inputs }}' | jq '.action_connectors')
    if [ "$conn" != "null" ]; then 
        connPrint=$(echo " -ci '$conn'")
        conn=$(echo $conn | jq -c)
        conn=$(echo " -ci $conn")
    fi

    env=$(echo '${{ parameters.api_inputs }}' | jq -r '.action_env')
    if [ "$env" != "null" ]; then
      env=$(echo " --env $env")
    fi

    inputs=$(echo '${{ parameters.api_inputs }}' | jq '.action_inputs')
    if [ "$inputs" != "null" ]; then 
        inputsPrint=$(echo " --inputs-json '$inputs'")
        inputs=$(echo $inputs | jq -c)
        inputs=$(echo " --inputs-json $inputs")
    fi
    name=$(echo '${{ parameters.api_inputs }}' | jq -r '.action_name')
    echo -e "\n${green}âš¡ Running Action: ${u_cyan}$name"
    echo -e "$(stk) run action $name $env $inputsPrint $connPrint --non-interactive\n" 
    $(stk) run action $name $env $inputs $conn --non-interactive
  displayName: Run action
- bash: |
    cat ~/.$(stk)/logs/*
  displayName: Show Error Log
  condition: failed()