name: Apply Plugin

on: 
  workflow_call:
    inputs:
      api_inputs:
        description: Workflow inputs (json)
        type: string
        required: true
      config:
        description: Workflow config (json)
        type: string
        required: true
    secrets:
      secrets:
        description: Secrets info (json)
        required: true
env:
  STK: ${{ fromJson(inputs.config).stk }}
  DEBUG: ${{ fromJson(inputs.config).debug }}
jobs:

  validate-inputs:
    name: Validate Inputs/Config
    runs-on: ${{ fromJson(inputs.config).runner }}
    steps:
      - name: Print inputs
        run: |
          echo "Inputs from api: ${{ inputs.api_inputs }}"

      - name: Print config
        run: |
          echo "Config: ${{ inputs.config }}"

      - name: "Validate config: 'config.stk'"
        if: fromJson(inputs.config).stk == ''
        run: |
         echo "ERROR: 'stk' field not found in json for 'config' input"
         exit 1

      - name: "Validate config: 'config.runner'"
        if: fromJson(inputs.config).runner == ''
        run: |
         echo "ERROR: 'runner' field not found in json for 'config' input"
         exit 1

  use-workspace:
    name: Prepare STK
    runs-on: ${{ fromJson(inputs.config).runner }}
    needs: validate-inputs
    env: 
      STK: ${{ fromJson(inputs.config).stk }}
    steps:
      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJson(inputs.config).origin_repository }}
          ref: ${{ fromJson(inputs.config).origin_branch }}   
          token: ${{ fromJson(secrets.secrets).scm_token }}

      - name: Cache
        uses: ./github-actions/restore-stk-cache
        with: 
          stk: ${{ env.STK }}

      - name: Install STK
        uses: ./github-actions/install-stk-cli
        with: 
          stk: ${{ env.STK }}

      - name: Login ${{ fromJson(inputs.api_inputs).cli_login_email }}
        uses: ./github-actions/login-stk
        with: 
          stk: ${{ env.STK }}
          email: ${{ fromJson(inputs.api_inputs).cli_login_email }}
          pat: ${{ fromJson(secrets.secrets).cli_token }}
          realm: ${{ fromJson(inputs.api_inputs).cli_login_realm }}

      - name: Use workspace ${{ fromJson(inputs.api_inputs).workspace_slug }}
        run: |
          $STK use workspace ${{ fromJson(inputs.api_inputs).workspace_slug }}
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*

  apply-plugin-using-stk-cli:
    name: Apply Stackspot Plugin
    needs: use-workspace
    if: |
      always() &&
      needs.validate-inputs.result == 'success'
    env:
      REPO: ${{ fromJson(inputs.api_inputs).repo }}
    runs-on: ${{ fromJson(inputs.config).runner }}
    steps:
      - name: Extract values from repo
        id: extract_values
        run: |
          org=$(echo "$REPO" | sed 's|.*github.com/\([^/]*\)/.*|\1|')
          app=$(echo "$REPO" | sed 's|.*github.com/[^/]*/\([^/]*\)$|\1|')

          echo $org
          echo $app

          echo "GITHUB_ORG=$org" >> $GITHUB_OUTPUT
          echo "APP_NAME=$app" >> $GITHUB_OUTPUT

      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          path: workflow_repo
          repository: ${{ fromJson(inputs.config).origin_repository }}
          ref: ${{ fromJson(inputs.config).origin_branch }}
          token: ${{ fromJson(secrets.secrets).scm_token }}

      - name: Restore STK Cache
        uses: ./workflow_repo/github-actions/restore-stk-cache 
        with: 
          stk: ${{ env.STK }}
      - name: Set git username
        run: |
          git config --global user.email "${{ fromJson(inputs.api_inputs).cli_login_email }}"
          git config --global user.name "${{ fromJson(inputs.api_inputs).cli_login_email }}"

      - name: Checkout the user repo
        id: checkout_user_repo
        uses:  ./github-actions/clone-external-repo
        with:
          github_org: ${{ steps.extract_values.outputs.GITHUB_ORG }}
          default_branch: stackspot-$(date +%s)
          app_name: ${{ steps.extract_values.outputs.APP_NAME }}
          path: user_repo
          secret_git_token: ${{ fromJson(secrets.secrets).scm_token }}
          github_url: $REPO

      - name: Set git username
        run: |
          git config --global user.email "${{ fromJson(inputs.api_inputs).cli_login_email }}"
          git config --global user.name "${{ fromJson(inputs.api_inputs).cli_login_email }}"

      - name: Apply plugin ${{ fromJson(inputs.api_inputs).plugin_name }}
        env:
          NAME: ${{ fromJson(inputs.api_inputs).plugin_name }}
          CI: ${{ toJson(fromJson(inputs.api_inputs).plugin_connectors) }}
        working-directory: user_repo
        run: |
          source ../.github/workflows/scripts/enable_colors.sh

          if $DEBUG
          then
            export APPLY_PLUGIN_ENABLE_DEBUG=true
            export COMMAND_ARGS_ENABLE_DEBUG=true
          fi

          connectors=()
          if [ "${CI}" != "null" ]; then 
              for json_object in $(echo "$CI" | jq -c '.[]'); do
                name=$(echo "$json_object" | jq -r '.name')
                type=$(echo "$json_object" | jq -r '.type')
                conn="--connectors.$type $name"
                connectors+=("$conn")
              done
          fi

          concatened_conn=$(IFS=' ' && echo "${connectors[*]}")

          INPUTS=${{ inputs.api_inputs | js . -cr .plugin_inputs }}
          if [ "$INPUTS" != "" ]; then 
              inputs_short=" --inputs-json $(echo $INPUTS | jq . -c)"
              echo $inputs_short
          fi

          echo -e "\n${green}âš¡ Applying plugin: ${u_cyan}$NAME"
          echo -e "$STK apply plugin $NAME $inputs_short $concatened_conn \n"
          $STK apply plugin $NAME $inputs_short $concatened_conn

      - name: Commit and Push.
        working-directory: user_repo
        env:
          NAME: ${{ fromJson(inputs.api_inputs).plugin_name }}
          TOKEN: ${{ fromJson(secrets.secrets).scm_token }}
          DEFAULT_BRANCH: ${{ fromJson(inputs.config).default_branch }}
          REPO: ${{ steps.checkout_user_repo.outputs.repo }}
        run: |
         if [[ `git status --porcelain` ]]; then
            bname=stackspot-$(date +%s)

            git checkout -b $bname
            git add -A
            git commit -am "stackspot initial commit"
            git push origin $bname

            description="Applying the plugin ${NAME}"

            echo ${{ steps.extract_values.outputs.GITHUB_ORG }}
            echo ${{ steps.extract_values.outputs.APP_NAME }}

            echo "https://api.github.com/repos/${{ steps.extract_values.outputs.GITHUB_ORG }}/${{ steps.extract_values.outputs.APP_NAME }}/pulls"
            echo "{
              \"title\": \"Apply ${NAME}\",
              \"body\": \"${description}\",
              \"head\": \"${bname}\",
              \"base\": \"${DEFAULT_BRANCH}\"
            }"

            curl --location "https://api.github.com/repos/${{ steps.extract_values.outputs.GITHUB_ORG }}/${{ steps.extract_values.outputs.APP_NAME }}/pulls" \
              --header "Authorization: Bearer ${TOKEN}" \
              --header "Accept: application/vnd.github+json" \
              --header "X-GitHub-Api-Version: 2022-11-28" \
              --header "Content-Type: application/json" \
              --data "{
                \"title\": \"Apply ${NAME}\",
                \"body\": \"${description}\",
                \"head\": \"${bname}\",
                \"base\": \"${DEFAULT_BRANCH}\"
              }"
         fi
      
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*