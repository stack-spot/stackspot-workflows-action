name: Apply Plugin

on: 
  workflow_call:
    inputs:
      api_inputs:
        description: Workflow inputs (json)
        type: string
        required: true
      config:
        description: Workflow config (json)
        type: string
        required: true
    secrets:
      secrets:
        description: Secrets info (json)
        required: true
env:
  STK: ${{ fromJson(inputs.config).stk }}
  DEBUG: ${{ fromJson(inputs.config).debug }}
jobs:
  apply-plugin:
    name: Apply ${{ fromJson(inputs.api_inputs).plugin_name }}
    runs-on: ${{ fromJson(inputs.config).runner }}
    env:
      REPO: ${{ fromJson(inputs.api_inputs).repo }}
    steps:
      - name: Sensitive inputs
        run: |
          sensitive=$(echo '${{ secrets.secrets }}' | jq -cr '.sensitive' | jq -r '.[]')
          for s in $sensitive; do
            echo "::add-mask::${s}"
          done

      - name: Checkout workflows repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          path: workflow_repo
          repository: ${{ fromJson(inputs.config).origin_repository }}
          ref: ${{ fromJson(inputs.config).origin_branch }}
          token: ${{ fromJson(secrets.secrets).scm_token }}

      - name: Restore STK Cache
        uses: ./workflow_repo/github-actions/restore-stk-cache 
        with: 
          stk: ${{ env.STK }}
      
      - name: Set git username
        run: |
          git config --global user.email "${{ fromJson(inputs.api_inputs).cli_login_email }}"
          git config --global user.name "${{ fromJson(inputs.api_inputs).cli_login_email }}"
      
      - name: Extract values from repo
        id: extract_values
        run: |
          org=$(echo "$REPO" | sed 's|.*github.com/\([^/]*\)/.*|\1|')
          app=$(echo "$REPO" | sed 's|.*github.com/[^/]*/\([^/]*\)$|\1|')

          echo $org
          echo $app

          echo "GITHUB_ORG=$org" >> $GITHUB_OUTPUT
          echo "APP_NAME=$app" >> $GITHUB_OUTPUT

      - name: Checkout the user repo
        id: checkout_user_repo
        uses:  ./workflow_repo/github-actions/clone-external-repo
        with:
          github_org: ${{ steps.extract_values.outputs.GITHUB_ORG }}
          default_branch: stackspot-$(date +%s)
          app_name: ${{ steps.extract_values.outputs.APP_NAME }}
          path: user_repo
          secret_git_token: ${{ fromJson(secrets.secrets).scm_token }}
          github_url: $REPO

      - name: Apply plugin ${{ fromJson(inputs.api_inputs).plugin_name }}
        working-directory: user_repo
        run: |
          apply_plugin_cmd=$(echo '${{ secrets.secrets }}' | jq -cr '.apply_plugin_cmd' | base64 --decode)
          set -x
          eval "$STK $apply_plugin_cmd"

      - name: Commit and Push.
        working-directory: user_repo
        env:
          NAME: ${{ fromJson(inputs.api_inputs).plugin_name }}
          TOKEN: ${{ fromJson(secrets.secrets).scm_token }}
          DEFAULT_BRANCH: ${{ fromJson(inputs.config).default_branch }}
          REPO: ${{ steps.checkout_user_repo.outputs.repo }}
        run: |
         if [[ `git status --porcelain` ]]; then
            bname=stackspot-$(date +%s)

            git checkout -b $bname
            git add -A
            git commit -am "stackspot initial commit"
            git push origin $bname

            description="Applying the plugin ${NAME}"

            echo ${{ steps.extract_values.outputs.GITHUB_ORG }}
            echo ${{ steps.extract_values.outputs.APP_NAME }}

            echo "https://api.github.com/repos/${{ steps.extract_values.outputs.GITHUB_ORG }}/${{ steps.extract_values.outputs.APP_NAME }}/pulls"
            echo "{
              \"title\": \"Apply ${NAME}\",
              \"body\": \"${description}\",
              \"head\": \"${bname}\",
              \"base\": \"${DEFAULT_BRANCH}\"
            }"

            curl --location "https://api.github.com/repos/${{ steps.extract_values.outputs.GITHUB_ORG }}/${{ steps.extract_values.outputs.APP_NAME }}/pulls" \
              --header "Authorization: Bearer ${TOKEN}" \
              --header "Accept: application/vnd.github+json" \
              --header "X-GitHub-Api-Version: 2022-11-28" \
              --header "Content-Type: application/json" \
              --data "{
                \"title\": \"Apply ${NAME}\",
                \"body\": \"${description}\",
                \"head\": \"${bname}\",
                \"base\": \"${DEFAULT_BRANCH}\"
              }"
         fi
      
      - name: Show Error Log
        if: failure()
        run: |
          cat ~/.$STK/logs/*